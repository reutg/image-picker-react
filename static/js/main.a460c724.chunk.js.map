{"version":3,"sources":["stores/ImagesStore.js","components/Navbar.js","components/SearchInput.js","components/Images/Image.js","components/Images/NoImagesMessage.js","components/Images/Pagination.js","components/Images/Images.js","components/Favorites/FavoriteDialog.js","components/Favorites/EditDescriptionInput.js","components/Favorites/FavoriteActions.js","components/Favorites/Favorite.js","components/Favorites/EmptyFavorites.js","components/Favorites/Favorites.js","App.js","serviceWorker.js","index.js"],"names":["ImagesStore","favorites","localStorage","getItem","this","JSON","parse","perPage","axios","get","query","pageNum","response","data","totalHits","hits","totalPagesAmount","Math","ceil","noResults","length","images","setItem","stringify","Object","values","favoritesToArray","observable","action","num","callApi","a","computed","image","savedImage","id","imageURL","largeImageURL","description","tags","saveFavoritesToLocalStroage","favoriteId","Navbar","classes","props","className","root","AppBar","position","Toolbar","Typography","variant","title","Component","withStyles","SearchInput","handleChange","event","setState","searchInput","target","value","loadImages","preventDefault","state","showError","form","noValidate","autoComplete","onSubmit","inputContainer","TextField","required","input","name","onChange","placeholder","FormHelperText","error","Button","type","color","display","justifyContent","alignItems","margin","flexDirection","width","Image","saveToFavorites","isFavorite","style","backgroundImage","Fab","size","button","onClick","iconFilled","theme","height","backgroundSize","backgroundPosition","borderRadius","backgroundColor","palette","secondary","main","NoImagesMessage","Pagination","inject","observer","createPages","imagesStore","pages","i","push","goToPage","currentPage","pageButton","key","container","IconButton","arrow","ButtonGroup","grouped","buttonGroup","padding","flexWrap","fontSize","minWidth","Images","toJS","isSnackbarOpen","handleClose","map","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","TransitionComponent","Slide","message","FavoriteDialog","favorite","closeDialog","isDialogOpen","Dialog","icon","EditDescriptionInput","handleInput","descriptionInput","isEditModeOn","editFavorite","Input","multiline","disableUnderline","disabled","FavoriteActions","showEditFavorite","removeFavorite","actions","Favorite","componentDidMount","openDialog","Paper","src","alt","marginTop","overflow","EmptyFavorites","Favorites","header","favoritesLength","paddingTop","textAlign","createMuiTheme","primary","typography","useNextVariants","fontFamily","App","search","Boolean","window","location","hostname","match","stores","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qgBAGA,I,QAEaA,GAAb,aAQE,aAAe,ubACb,IAAMC,EAAYC,aAAaC,QAAQ,aACnCF,IACFG,KAAKH,UAAYI,KAAKC,MAAML,IAXlC,qLAuBUM,EAAU,GAvBpB,SAwB2BC,IAAMC,IAAN,uCA1Bf,qCA0Be,cACoBL,KAAKM,MADzB,qBAC2CH,EAD3C,iBAC2DH,KAAKO,QADhE,yBAxB3B,OAwBUC,EAxBV,SA4BgCA,EAASC,KAA7BC,EA5BZ,EA4BYA,UAAWC,EA5BvB,EA4BuBA,KACnBX,KAAKY,iBAAmBC,KAAKC,KAAKJ,EAAYP,GAC9CH,KAAKe,UAA4B,IAAhBJ,EAAKK,OACtBhB,KAAKiB,OAASN,EA/BlB,0JAiDIb,aAAaoB,QAAQ,YAAajB,KAAKkB,UAAUnB,KAAKH,cAjD1D,uCAyCI,OAAOuB,OAAOC,OAAOrB,KAAKH,aAzC9B,sCA6CI,OAAOG,KAAKsB,iBAAiBN,WA7CjC,yCACGO,KADH,wEACuB,MADvB,uCAEGA,KAFH,wEAE0B,MAF1B,8CAGGA,KAHH,qGAIGA,KAJH,mGAKGA,KALH,yEAKwB,KALxB,mCAMGA,KANH,oGAeGC,KAfH,oFAeqB,SAAAC,GACbA,IAAQ,EAAKlB,SAAWkB,GAAO,GAAKA,GAAO,EAAKb,mBAClD,EAAKL,QAAUkB,EACf,EAAKC,eAlBX,wCAkCGF,KAlCH,2HAkCuB,WAAMlB,GAAN,SAAAqB,EAAA,6DACnB,EAAKrB,MAAQA,EACb,EAAKC,QAAU,EAFI,SAGb,EAAKmB,UAHQ,2CAlCvB,qGAwCGE,KAxCH,wHA4CGA,KA5CH,yHAoDGJ,KApDH,oFAoD4B,SAAAK,GACxB,IAAMC,EAAa,CACjBC,GAAIF,EAAME,GACVC,SAAUH,EAAMI,cAChBC,YAAaL,EAAMM,MAErB,EAAKtC,UAAUgC,EAAME,IAAMD,EAC3B,EAAKM,kCA3DT,4CA8DGZ,KA9DH,oFA8D2B,SAAAa,UAChB,EAAKxC,UAAUwC,GACtB,EAAKD,kCAhET,0CAmEGZ,KAnEH,oFAmEyB,SAACa,EAAYH,GAClC,EAAKrC,UAAUwC,G,yWAAf,IAAkC,EAAKxC,UAAUwC,GAAjD,CAA8DH,gBAC9D,EAAKE,kCArET,G,oFCAME,E,iLACM,IACAC,EAAYvC,KAAKwC,MAAjBD,QAER,OACE,yBAAKE,UAAWF,EAAQG,MACtB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWF,EAAQS,OAA5C,uB,GARSC,aAkBNC,cAnBA,GAmBAA,CAAmBZ,G,oCCL5Ba,E,YACJ,aAAe,IAAD,8BACZ,+CAQFC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAV9B,EAadC,WAAa,SAAAL,GACXA,EAAMM,iBADc,IAGZJ,EAAgB,EAAKK,MAArBL,YACmB,IAAvBA,EAAYvC,OACd,EAAKsC,SAAS,CAAEO,WAAW,IAE3B,EAAKrB,MAAMkB,WAAWH,IAjBxB,EAAKK,MAAQ,CACXL,YAAa,GACbM,WAAW,GALD,E,sEAwBJ,IACAtB,EAAYvC,KAAKwC,MAAjBD,QADD,EAE4BvC,KAAK4D,MAAhCL,EAFD,EAECA,YAAaM,EAFd,EAEcA,UAErB,OACE,0BAAMpB,UAAWF,EAAQuB,KAAMC,YAAU,EAACC,aAAa,MAAMC,SAAUjE,KAAK0D,YAC1E,yBAAKjB,UAAWF,EAAQ2B,gBACtB,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACR3B,UAAWF,EAAQ8B,MACnBC,KAAK,cACLb,MAAOF,EACPgB,SAAUvE,KAAKoD,aACfoB,YAAY,yBAGbX,GAAa,kBAACY,EAAA,EAAD,CAAgBC,OAAK,GAArB,+BAEhB,kBAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,YAAY9B,QAAQ,aAAhD,e,GA3CkBE,aAmDXC,cAjEA,CACbY,KAAM,CACJgB,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,OAAQ,SAEVf,eAAgB,CACdY,QAAS,OACTI,cAAe,SACfC,MAAO,QAuDIjC,CAAmBC,G,sEC1C5BiC,G,iLACM,IAAD,EACiDpF,KAAKwC,MAArDD,EADD,EACCA,QAASV,EADV,EACUA,MAAOwD,EADjB,EACiBA,gBAAiBC,EADlC,EACkCA,WAEzC,GAAKzD,EAIL,OACE,yBACEY,UAAWF,EAAQV,MACnB0D,MAAO,CAAEC,gBAAgB,QAAD,OAAU3D,EAAMI,cAAhB,QAExB,kBAACwD,GAAA,EAAD,CACEC,KAAK,QACLnD,QAAS,CAAEG,KAAMH,EAAQoD,QACzBC,QAAS,kBAAMP,EAAgBxD,KAE9ByD,EAAa,kBAAC,KAAD,CAAe7C,UAAWF,EAAQsD,aAAiB,kBAAC,KAAD,Y,GAlBvD5C,aAyBLC,gBA9CA,SAAA4C,GAAK,MAAK,CACvBjE,MAAO,CACLiD,QAAS,OACTC,eAAgB,WAChBC,WAAY,WACZG,MAAO,OACPY,OAAQ,OACRd,OAAQ,OACRe,eAAgB,QAChBC,mBAAoB,SACpBC,aAAc,MAEhBP,OAAQ,CACNV,OAAQ,KACRkB,gBAAiB,4BAEnBN,WAAY,CACVhB,MAAOiB,EAAMM,QAAQC,UAAUC,SA6BpBpD,CAAmBkC,ICvCnBmB,G,iLARX,OACE,kBAACzD,EAAA,EAAD,CAAYC,QAAQ,YAAY8B,MAAM,aAAtC,4B,GAHwB5B,a,4DC4BxBuD,GAFLC,YAAO,c,GACPC,Y,6MAECC,YAAc,WAIZ,IAJmB,IAAD,EACe,EAAKnE,MAA9BD,EADU,EACVA,QAASqE,EADC,EACDA,YACXC,EAAQ,GAFI,WAITC,GACPD,EAAME,KACJ,kBAACpC,EAAA,EAAD,CACEiB,QAAS,kBAAM,EAAKoB,SAASF,IAC7BrE,UAAWmE,EAAYrG,UAAYuG,EAAIvE,EAAQ0E,YAAc1E,EAAQ2E,WACrEC,IAAKL,GAEJA,KAPEA,EAAI,EAAGA,GAAKF,EAAYhG,iBAAkBkG,IAAM,EAAhDA,GAYT,OAAOD,G,EAGTG,SAAW,SAAAvF,GACT,EAAKe,MAAMoE,YAAYI,SAASvF,I,wEAGxB,IAAD,SAC0BzB,KAAKwC,MAA9BD,EADD,EACCA,QAASqE,EADV,EACUA,YAEjB,OACE,yBAAKnE,UAAWF,EAAQ6E,WACtB,kBAACC,GAAA,EAAD,CACE5E,UAAWF,EAAQ+E,MACnB1B,QAAS,kBAAM,EAAKoB,SAASJ,EAAYrG,QAAU,KAEnD,kBAAC,KAAD,OAGF,kBAACgH,GAAA,EAAD,CACEhF,QAAS,CAAEiF,QAASjF,EAAQiF,QAAS9E,KAAMH,EAAQkF,aACnD1E,QAAQ,QAEP/C,KAAK2G,eAGR,kBAACU,GAAA,EAAD,CACE5E,UAAWF,EAAQ+E,MACnB1B,QAAS,kBAAM,EAAKoB,SAASJ,EAAYrG,QAAU,KAEnD,kBAAC,KAAD,Y,GA/Ce0C,e,MAsDVC,gBA7EA,SAAA4C,GAAK,MAAK,CACvBsB,UAAW,CACTtC,QAAS,OACTE,WAAY,SACZ0C,QAAS,KACT3C,eAAgB,eAChB4C,SAAU,QAEZT,WAAY,CACVU,SAAU,SAEZX,YAAa,CACXW,SAAU,QACV/C,MAAOiB,EAAMM,QAAQC,UAAUC,MAEjCkB,QAAS,CACPK,SAAU,MACVH,QAAS,cA4DExE,CAAmBsD,IC3D5BsB,GAFLrB,YAAO,c,GACPC,Y,cAEC,aAAe,IAAD,8BACZ,+CAMFrB,gBAAkB,SAAAxD,GACEkG,YAAK,EAAKvF,MAAMoE,YAAY/G,WACnBgC,EAAME,IAK/B,EAAKuB,SAAS,CAAE0E,gBAAgB,IAFhC,EAAKxF,MAAMoE,YAAYvB,gBAAgBxD,IAZ7B,EAkBdoG,YAAc,WACZ,EAAK3E,SAAS,CAAE0E,gBAAgB,KAjBhC,EAAKpE,MAAQ,CACXoE,gBAAgB,GAHN,E,sEAsBH,IAAD,SACyBhI,KAAKwC,MAA9BD,EADA,EACAA,QAASqE,EADT,EACSA,YACX3F,EAAS8G,YAAKnB,EAAY3F,QAC1BpB,EAAYkI,YAAKnB,EAAY/G,WAC3BmI,EAAmBhI,KAAK4D,MAAxBoE,eAER,OACE,yBAAKvF,UAAWF,EAAQ6E,WACrBR,EAAY7F,UACX,kBAAC,GAAD,MAEA,yBAAK0B,UAAWF,EAAQtB,QACrBA,EAAOiH,KAAI,SAAArG,GAAK,OACf,kBAAC,GAAD,CACEsF,IAAKtF,EAAME,GACXF,MAAOA,EACPwD,gBAAiB,EAAKA,gBACtBC,aAAczF,EAAUgC,EAAME,UAMrCd,EAAOD,OAAS,kBAAC,GAAD,MAAiB,GAElC,kBAACmH,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMP,EACNQ,iBAAkB,IAClBC,QAASzI,KAAKiI,YACdS,oBAAqBC,KACrBC,QAAS,yE,GAzDE3F,e,MA+DNC,eA/EA,CACbkE,UAAW,CACTtC,QAAS,OACTI,cAAe,SACfF,WAAY,UAEd/D,OAAQ,CACN6D,QAAS,OACT6C,SAAU,OACV5C,eAAgB,SAChBE,OAAQ,UAqEG/B,CAAmB4E,I,wCChE5Be,G,iLACM,IAAD,EACkD7I,KAAKwC,MAAtDD,EADD,EACCA,QAASuG,EADV,EACUA,SAAUC,EADpB,EACoBA,YAAaC,EADjC,EACiCA,aAExC,OACE,kBAACC,GAAA,EAAD,CAAQR,QAASM,EAAaR,KAAMS,GAClC,yBACEvG,UAAWF,EAAQV,MACnB0D,MAAO,CAAEC,gBAAgB,QAAD,OAAUsD,EAAS9G,SAAnB,QAExB,kBAACyD,GAAA,EAAD,CAAKC,KAAK,QAAQjD,UAAWF,EAAQ2G,KAAMtD,QAASmD,GAClD,kBAAC,KAAD,a,GAXiB9F,aAmBdC,eAtCA,CACbrB,MAAO,CACLsD,MAAO,OACPY,OAAQ,OACRjB,QAAS,OACTI,cAAe,SACfH,eAAgB,MAChBC,WAAY,WACZgB,eAAgB,QAChBC,mBAAoB,UAEtBiD,KAAM,CACJjE,OAAQ,KACRE,MAAO,OACPY,OAAQ,OACRI,gBAAiB,6BAuBNjD,CAAmB2F,I,sEC9B5BM,G,iLACM,IAAD,EACwEnJ,KAAKwC,MAA5ED,EADD,EACCA,QAAS6G,EADV,EACUA,YAAaC,EADvB,EACuBA,iBAAkBC,EADzC,EACyCA,aAAcC,EADvD,EACuDA,aAE9D,OACE,yBAAK9G,UAAWF,EAAQ2B,gBACtB,kBAACsF,GAAA,EAAD,CACEC,WAAS,EACThG,MAAO4F,EACP9E,SAAU6E,EACV7G,QAAS,CAAEG,KAAMH,EAAQ8B,OACzBqF,kBAAkBJ,EAClBK,UAAUL,IAGXA,GACC,kBAACjC,GAAA,EAAD,CAAYzB,QAAS2D,GACnB,kBAAC,KAAD,CAAU1E,MAAM,kB,GAjBO5B,aAyBpBC,eAlCA,CACbgB,eAAgB,CACdY,QAAS,QAEXT,MAAO,CACLuD,SAAU,UA6BC1E,CAAmBiG,ICX5BS,G,iLACM,IAAD,EAUH5J,KAAKwC,MARPD,EAFK,EAELA,QACA6G,EAHK,EAGLA,YACAC,EAJK,EAILA,iBACAC,EALK,EAKLA,aACAC,EANK,EAMLA,aACAM,EAPK,EAOLA,iBACAC,EARK,EAQLA,eACAhB,EATK,EASLA,SAGF,OACE,yBAAKrG,UAAWF,EAAQ6E,WACtB,yBAAK3E,UAAWF,EAAQL,aACtB,kBAAC,GAAD,CACEkH,YAAaA,EACbC,iBAAkBA,EAClBC,aAAcA,EACdC,aAAcA,KAIlB,yBAAK9G,UAAWF,EAAQwH,SACtB,kBAAC,KAAD,CAAUtH,UAAWF,EAAQ2G,KAAMtD,QAASiE,IAC5C,kBAAC,KAAD,CAAYpH,UAAWF,EAAQ2G,KAAMtD,QAAS,kBAAMkE,EAAehB,EAAS/G,a,GA1BxDkB,aAgCfC,eApDA,CACbkE,UAAW,CACTtC,QAAS,OACTE,WAAY,SACZD,eAAgB,gBAChBI,MAAO,OACPuC,QAAS,QAEXxF,YAAa,CACXiD,MAAO,OAET4E,QAAS,CACP5E,MAAO,MACPL,QAAS,OACTC,eAAgB,gBAElBmE,KAAM,CACJrE,MAAO,YAmCI3B,CAAmB0G,ICvC5BI,G,YACJ,aAAe,IAAD,8BACZ,+CAQFC,kBAAoB,WAClB,EAAK3G,SAAS,CAAE+F,iBAAkB,EAAK7G,MAAMsG,SAAS5G,eAV1C,EAad2H,iBAAmB,WACjB,EAAKvG,SAAS,CAAEgG,cAAc,KAdlB,EAgBdF,YAAc,SAAA/F,GACZ,EAAKC,SAAS,CAAE+F,iBAAkBhG,EAAMG,OAAOC,SAjBnC,EAoBd8F,aAAe,WAAO,IACZT,EAAa,EAAKtG,MAAlBsG,SACAO,EAAqB,EAAKzF,MAA1ByF,iBAEJA,GAAoBA,EAAiBrI,SACvC,EAAKsC,SAAS,CAAEgG,cAAc,IAC9B,EAAK9G,MAAM+G,aAAaT,EAAS/G,GAAIsH,KA1B3B,EA8Bda,WAAa,WACX,EAAK5G,SAAS,CAAE0F,cAAc,KA/BlB,EAkCdD,YAAc,WACZ,EAAKzF,SAAS,CAAE0F,cAAc,KAjC9B,EAAKpF,MAAQ,CACXyF,iBAAkB,GAClBC,cAAc,EACdN,cAAc,GALJ,E,sEAsCJ,IAAD,EACkDhJ,KAAK4D,MAAtD0F,EADD,EACCA,aAAcD,EADf,EACeA,iBAAkBL,EADjC,EACiCA,aADjC,EAEuChJ,KAAKwC,MAA3CD,EAFD,EAECA,QAASuG,EAFV,EAEUA,SAAUgB,EAFpB,EAEoBA,eAE3B,OACE,oCACE,kBAACK,GAAA,EAAD,CAAO1H,UAAWF,EAAQuG,UACxB,yBACElD,QAAS5F,KAAKkK,WACdzH,UAAWF,EAAQV,MACnBuI,IAAKtB,EAAS9G,SACdqI,IAAKvB,EAAS5G,cAEhB,kBAAC,GAAD,CACE4G,SAAUA,EACVM,YAAapJ,KAAKoJ,YAClBC,iBAAkBA,EAClBC,aAAcA,EACdC,aAAcvJ,KAAKuJ,aACnBM,iBAAkB7J,KAAK6J,iBACvBC,eAAgBA,KAIpB,kBAAC,GAAD,CACEhB,SAAUA,EACVE,aAAcA,EACdD,YAAa/I,KAAK+I,mB,GAlEL9F,aAyERC,eAvFA,CACb4F,SAAU,CACRhE,QAAS,OACTC,eAAgB,gBAChBuF,UAAW,KACXC,SAAU,SACVpF,MAAO,OAETtD,MAAO,CACLsD,MAAO,OACPY,OAAQ,SA6EG7C,CAAmB8G,ICnF5BQ,G,iLACM,IACAjI,EAAYvC,KAAKwC,MAAjBD,QAER,OACE,kBAACO,EAAA,EAAD,CAAYC,QAAQ,UAAUR,QAAS,CAAEG,KAAMH,EAAQG,OAAvD,gD,GALuBO,aAYdC,eAnBA,CACbR,KAAM,CACJoC,QAAS,OACTC,eAAgB,WAgBL7B,CAAmBsH,ICM5BC,GAFLhE,YAAO,c,GACPC,Y,6MAECoD,eAAiB,SAAAzH,GACf,EAAKG,MAAMoE,YAAYkD,eAAezH,I,EAGxCkH,aAAe,SAAClH,EAAYH,GAC1B,EAAKM,MAAMoE,YAAY2C,aAAalH,EAAYH,I,wEAGxC,IAAD,SAC0BlC,KAAKwC,MAA9BD,EADD,EACCA,QAASqE,EADV,EACUA,YAEjB,OACE,yBAAKnE,UAAWF,EAAQ6E,WACtB,kBAACtE,EAAA,EAAD,CAAY+B,MAAM,YAAYpC,UAAWF,EAAQmI,OAAQ3H,QAAQ,MAAjE,kBAIA,yBAAKN,UAAWF,EAAQ1C,WACrB+G,EAAY+D,iBAAmB,EAC9B,kBAAC,GAAD,MAEA/D,EAAYtF,iBAAiB4G,KAAI,SAAAY,GAAQ,OACvC,kBAAC,GAAD,CACE3B,IAAK2B,EAAS/G,GACd+G,SAAUA,EACVgB,eAAgB,EAAKA,eACrBP,aAAc,EAAKA,wB,GA3BXtG,e,MAqCTC,eA1DA,CACbkE,UAAW,CACTwD,WAAY,KACZzF,MAAO,MACP,4BAA6B,CAC3BA,MAAO,SAGXuF,OAAQ,CACNG,UAAW,UAEbhL,UAAW,CACTyK,UAAW,KACXxF,QAAS,OACTI,cAAe,SACfF,WAAY,WA2CD9B,CAAmBuH,ICzD5B3E,GAAQgF,YAAe,CAC3B1E,QAAS,CACP2E,QAAS,CACPzE,KAAM,WAERD,UAAW,CACTC,KAAM,YAGV0E,WAAY,CACVC,iBAAiB,EACjBC,WAAY,6BAsBVC,GAFL1E,YAAO,c,GACPC,Y,6MAEChD,W,uCAAa,WAAMH,GAAN,SAAA5B,EAAA,sEACL,EAAKa,MAAMoE,YAAYlD,WAAWH,GAD7B,2C,8HAIH,IACAhB,EAAYvC,KAAKwC,MAAjBD,QACR,OACE,kBAAC,IAAD,CAAkBuD,MAAOA,IACvB,kBAAC,EAAD,MACA,yBAAKrD,UAAWF,EAAQ6E,WACtB,yBAAK3E,UAAWF,EAAQ6I,QACtB,kBAAC,EAAD,CAAa1H,WAAY1D,KAAK0D,aAC9B,kBAAC,GAAD,OAEF,kBAAC,GAAD,Y,GAfQT,e,MAsBHC,eAxCA,CACbkE,UAAW,CACTtC,QAAS,OACTC,eAAgB,gBAChB,4BAA6B,CAC3BG,cAAe,mBAGnBkG,OAAQ,CACNjG,MAAO,MACP,4BAA6B,CAC3BA,MAAO,UA6BEjC,CAAmBiI,ICpDdE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTN,IACMC,GAAS,CAAE9E,YADG,IAAIhH,GAGxB+L,IAASC,OACP,kBAAC,IAAaF,GACZ,kBAAC,GAAD,OAEFG,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.a460c724.chunk.js","sourcesContent":["import { observable, action, computed } from 'mobx'\r\nimport axios from 'axios'\r\n\r\nconst KEY = '14511609-744a126e4517a4592d7bbe83d'\r\n\r\nexport class ImagesStore {\r\n  @observable images = []\r\n  @observable favorites = {}\r\n  @observable totalPagesAmount\r\n  @observable noResults\r\n  @observable pageNum = 1\r\n  @observable query\r\n\r\n  constructor() {\r\n    const favorites = localStorage.getItem('favorites')\r\n    if (favorites) {\r\n      this.favorites = JSON.parse(favorites)\r\n    }\r\n  }\r\n\r\n  @action goToPage = num => {\r\n    if (num !== this.pageNum && num >= 1 && num <= this.totalPagesAmount) {\r\n      this.pageNum = num\r\n      this.callApi()\r\n    }\r\n  }\r\n\r\n  async callApi() {\r\n    const perPage = 52\r\n    const response = await axios.get(\r\n      `https://pixabay.com/api/?key=${KEY}&q=${this.query}&per_page=${perPage}&page=${this.pageNum}&image_type=\"vector\"`\r\n    )\r\n\r\n    const { totalHits, hits } = response.data\r\n    this.totalPagesAmount = Math.ceil(totalHits / perPage)\r\n    this.noResults = hits.length === 0\r\n    this.images = hits\r\n  }\r\n\r\n  @action loadImages = async query => {\r\n    this.query = query\r\n    this.pageNum = 1\r\n    await this.callApi()\r\n  }\r\n\r\n  @computed get favoritesToArray() {\r\n    return Object.values(this.favorites)\r\n  }\r\n\r\n  @computed get favoritesLength() {\r\n    return this.favoritesToArray.length\r\n  }\r\n\r\n  saveFavoritesToLocalStroage() {\r\n    localStorage.setItem('favorites', JSON.stringify(this.favorites))\r\n  }\r\n\r\n  @action saveToFavorites = image => {\r\n    const savedImage = {\r\n      id: image.id,\r\n      imageURL: image.largeImageURL,\r\n      description: image.tags,\r\n    }\r\n    this.favorites[image.id] = savedImage\r\n    this.saveFavoritesToLocalStroage()\r\n  }\r\n\r\n  @action removeFavorite = favoriteId => {\r\n    delete this.favorites[favoriteId]\r\n    this.saveFavoritesToLocalStroage()\r\n  }\r\n\r\n  @action editFavorite = (favoriteId, description) => {\r\n    this.favorites[favoriteId] = { ...this.favorites[favoriteId], description }\r\n    this.saveFavoritesToLocalStroage()\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = {}\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position='static'>\r\n          <Toolbar>\r\n            <Typography variant='h6' className={classes.title}>\r\n              Image picker\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar)\r\n","import React, { Component } from 'react'\r\nimport { TextField, Button, FormHelperText } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nconst styles = {\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    margin: '5% 3%',\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '70%',\r\n  },\r\n}\r\n\r\nclass SearchInput extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      searchInput: '',\r\n      showError: false,\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ searchInput: event.target.value })\r\n  }\r\n\r\n  loadImages = event => {\r\n    event.preventDefault()\r\n    \r\n    const { searchInput } = this.state\r\n    if (searchInput.length === 0) {\r\n      this.setState({ showError: true })\r\n    } else {\r\n      this.props.loadImages(searchInput)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props\r\n    const { searchInput, showError } = this.state\r\n\r\n    return (\r\n      <form className={classes.form} noValidate autoComplete='off' onSubmit={this.loadImages}>\r\n        <div className={classes.inputContainer}>\r\n          <TextField\r\n            required\r\n            className={classes.input}\r\n            name='searchInput'\r\n            value={searchInput}\r\n            onChange={this.handleChange}\r\n            placeholder='Search for images...'\r\n          />\r\n\r\n          {showError && <FormHelperText error>Please enter a search term</FormHelperText>}\r\n        </div>\r\n        <Button type='submit' color='secondary' variant='contained'>\r\n          Search\r\n        </Button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SearchInput)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport HeartIcon from '@material-ui/icons/FavoriteBorder'\r\nimport FullHeartIcon from '@material-ui/icons/Favorite'\r\nimport { Fab } from '@material-ui/core'\r\n\r\nconst styles = theme => ({\r\n  image: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    width: '15vh',\r\n    height: '15vh',\r\n    margin: '1.5%',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    borderRadius: '1%',\r\n  },\r\n  button: {\r\n    margin: '5%',\r\n    backgroundColor: 'rgba(247, 248, 250, 0.7)',\r\n  },\r\n  iconFilled: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n})\r\n\r\nclass Image extends Component {\r\n  render() {\r\n    const { classes, image, saveToFavorites, isFavorite } = this.props\r\n\r\n    if (!image) {\r\n      return\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={classes.image}\r\n        style={{ backgroundImage: `url('${image.largeImageURL}')` }}\r\n      >\r\n        <Fab\r\n          size='small'\r\n          classes={{ root: classes.button }}\r\n          onClick={() => saveToFavorites(image)}\r\n        >\r\n          {isFavorite ? <FullHeartIcon className={classes.iconFilled} /> : <HeartIcon />}\r\n        </Fab>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Image)\r\n","import React, { Component } from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nclass NoImagesMessage extends Component {\r\n  render() {\r\n    return (\r\n      <Typography variant='subtitle1' color='secondary'>\r\n        No images were found\r\n      </Typography>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoImagesMessage\r\n","import React, { Component } from 'react'\r\nimport { Button, ButtonGroup, IconButton } from '@material-ui/core'\r\nimport { inject, observer } from 'mobx-react'\r\n\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport ArrowForward from '@material-ui/icons/ArrowForward'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '5%',\r\n    justifyContent: 'space-evenly',\r\n    flexWrap: 'wrap',\r\n  },\r\n  pageButton: {\r\n    fontSize: '0.7em',\r\n  },\r\n  currentPage: {\r\n    fontSize: '0.7em',\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  grouped: {\r\n    minWidth: '10%',\r\n    padding: '2px 8px',\r\n  },\r\n})\r\n\r\n@inject('imagesStore')\r\n@observer\r\nclass Pagination extends Component {\r\n  createPages = () => {\r\n    const { classes, imagesStore } = this.props\r\n    const pages = []\r\n\r\n    for (let i = 1; i <= imagesStore.totalPagesAmount; i++) {\r\n      pages.push(\r\n        <Button\r\n          onClick={() => this.goToPage(i)}\r\n          className={imagesStore.pageNum === i ? classes.currentPage : classes.pageButton}\r\n          key={i}\r\n        >\r\n          {i}\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    return pages\r\n  }\r\n\r\n  goToPage = num => {\r\n    this.props.imagesStore.goToPage(num)\r\n  }\r\n\r\n  render() {\r\n    const { classes, imagesStore } = this.props\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <IconButton\r\n          className={classes.arrow}\r\n          onClick={() => this.goToPage(imagesStore.pageNum - 1)}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n\r\n        <ButtonGroup\r\n          classes={{ grouped: classes.grouped, root: classes.buttonGroup }}\r\n          variant='text'\r\n        >\r\n          {this.createPages()}\r\n        </ButtonGroup>\r\n\r\n        <IconButton\r\n          className={classes.arrow}\r\n          onClick={() => this.goToPage(imagesStore.pageNum + 1)}\r\n        >\r\n          <ArrowForward />\r\n        </IconButton>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Pagination)\r\n","import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\nimport { toJS } from 'mobx'\r\nimport { Snackbar, Slide } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport Image from './Image'\r\nimport NoImagesMessage from './NoImagesMessage'\r\nimport Pagination from './Pagination'\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  images: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    margin: '3% 4%',\r\n  }\r\n}\r\n\r\n@inject('imagesStore')\r\n@observer\r\nclass Images extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      isSnackbarOpen: false,\r\n    }\r\n  }\r\n\r\n  saveToFavorites = image => {\r\n    const favorites = toJS(this.props.imagesStore.favorites)\r\n    const favorite = favorites[image.id]\r\n\r\n    if (!favorite) {\r\n      this.props.imagesStore.saveToFavorites(image)\r\n    } else {\r\n      this.setState({ isSnackbarOpen: true })\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ isSnackbarOpen: false })\r\n  }\r\n\r\n   render() {\r\n    const { classes, imagesStore } = this.props\r\n    const images = toJS(imagesStore.images)\r\n    const favorites = toJS(imagesStore.favorites)\r\n    const { isSnackbarOpen } = this.state\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        {imagesStore.noResults ? (\r\n          <NoImagesMessage />\r\n        ) : (\r\n          <div className={classes.images}>\r\n            {images.map(image => (\r\n              <Image\r\n                key={image.id}\r\n                image={image}\r\n                saveToFavorites={this.saveToFavorites}\r\n                isFavorite={!!favorites[image.id]}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {images.length ? <Pagination /> : ''}\r\n        \r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={isSnackbarOpen}\r\n          autoHideDuration={2000}\r\n          onClose={this.handleClose}\r\n          TransitionComponent={Slide}\r\n          message={<span>Image already saved to favorites</span>}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withStyles(styles)(Images)\r\n","import React, { Component } from 'react'\r\nimport { Dialog, Fab } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst styles = {\r\n  image: {\r\n    width: '70vh',\r\n    height: '70vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'end',\r\n    alignItems: 'flex-end',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  icon: {\r\n    margin: '1%',\r\n    width: '35px',\r\n    height: '30px',\r\n    backgroundColor: 'rgba(247, 248, 250, 0.7)',\r\n  },\r\n}\r\n\r\nclass FavoriteDialog extends Component {\r\n  render() {\r\n    const { classes, favorite, closeDialog, isDialogOpen } = this.props\r\n    \r\n    return (\r\n      <Dialog onClose={closeDialog} open={isDialogOpen}>\r\n        <div\r\n          className={classes.image}\r\n          style={{ backgroundImage: `url('${favorite.imageURL}')` }}\r\n        >\r\n          <Fab size='small' className={classes.icon} onClick={closeDialog}>\r\n            <CloseIcon />\r\n          </Fab>\r\n        </div>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FavoriteDialog)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { IconButton, Input } from '@material-ui/core'\r\nimport SaveIcon from '@material-ui/icons/Done'\r\n\r\nconst styles = {\r\n  inputContainer: {\r\n    display: 'flex',\r\n  },\r\n  input: {\r\n    fontSize: '0.8em',\r\n  },\r\n}\r\n\r\nclass EditDescriptionInput extends Component {\r\n  render() {\r\n    const { classes, handleInput, descriptionInput, isEditModeOn, editFavorite } = this.props\r\n\r\n    return (\r\n      <div className={classes.inputContainer}>\r\n        <Input\r\n          multiline\r\n          value={descriptionInput}\r\n          onChange={handleInput}\r\n          classes={{ root: classes.input }}\r\n          disableUnderline={isEditModeOn ? false : true}\r\n          disabled={isEditModeOn ? false : true}\r\n        />\r\n\r\n        {isEditModeOn && (\r\n          <IconButton onClick={editFavorite}>\r\n            <SaveIcon color='primary' />\r\n          </IconButton>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(EditDescriptionInput)\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport EditIcon from '@material-ui/icons/EditOutlined'\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined'\r\n\r\nimport EditDescriptionInput from './EditDescriptionInput'\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    padding: '0 3%',\r\n  },\r\n  description: {\r\n    width: '70%',\r\n  },\r\n  actions: {\r\n    width: '25%',\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  icon: {\r\n    color: '#616161',\r\n  },\r\n}\r\nclass FavoriteActions extends Component {\r\n  render() {\r\n    const {\r\n      classes,\r\n      handleInput,\r\n      descriptionInput,\r\n      isEditModeOn,\r\n      editFavorite,\r\n      showEditFavorite,\r\n      removeFavorite,\r\n      favorite,\r\n    } = this.props\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.description}>\r\n          <EditDescriptionInput\r\n            handleInput={handleInput}\r\n            descriptionInput={descriptionInput}\r\n            isEditModeOn={isEditModeOn}\r\n            editFavorite={editFavorite}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n          <EditIcon className={classes.icon} onClick={showEditFavorite} />\r\n          <DeleteIcon className={classes.icon} onClick={() => removeFavorite(favorite.id)} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withStyles(styles)(FavoriteActions)\r\n","import React, { Component } from 'react'\r\nimport { Paper } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nimport FavoriteDialog from './FavoriteDialog'\r\nimport FavoriteActions from './FavoriteActions'\r\n\r\nconst styles = {\r\n  favorite: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: '3%',\r\n    overflow: 'hidden',\r\n    width: '90%',\r\n  },\r\n  image: {\r\n    width: '10vh',\r\n    height: '10vh',\r\n  },\r\n}\r\n\r\nclass Favorite extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      descriptionInput: '',\r\n      isEditModeOn: false,\r\n      isDialogOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ descriptionInput: this.props.favorite.description })\r\n  }\r\n\r\n  showEditFavorite = () => {\r\n    this.setState({ isEditModeOn: true })\r\n  }\r\n  handleInput = event => {\r\n    this.setState({ descriptionInput: event.target.value })\r\n  }\r\n\r\n  editFavorite = () => {\r\n    const { favorite } = this.props\r\n    const { descriptionInput } = this.state\r\n\r\n    if (descriptionInput && descriptionInput.length) {\r\n      this.setState({ isEditModeOn: false })\r\n      this.props.editFavorite(favorite.id, descriptionInput)\r\n    }\r\n  }\r\n\r\n  openDialog = () => {\r\n    this.setState({ isDialogOpen: true })\r\n  }\r\n\r\n  closeDialog = () => {\r\n    this.setState({ isDialogOpen: false })\r\n  }\r\n\r\n  render() {\r\n    const { isEditModeOn, descriptionInput, isDialogOpen } = this.state\r\n    const { classes, favorite, removeFavorite } = this.props\r\n\r\n    return (\r\n      <>\r\n        <Paper className={classes.favorite}>\r\n          <img\r\n            onClick={this.openDialog}\r\n            className={classes.image}\r\n            src={favorite.imageURL}\r\n            alt={favorite.description}\r\n          />\r\n          <FavoriteActions\r\n            favorite={favorite}\r\n            handleInput={this.handleInput}\r\n            descriptionInput={descriptionInput}\r\n            isEditModeOn={isEditModeOn}\r\n            editFavorite={this.editFavorite}\r\n            showEditFavorite={this.showEditFavorite}\r\n            removeFavorite={removeFavorite}\r\n          />\r\n        </Paper>\r\n\r\n        <FavoriteDialog\r\n          favorite={favorite}\r\n          isDialogOpen={isDialogOpen}\r\n          closeDialog={this.closeDialog}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Favorite)\r\n","import React, { Component } from 'react'\r\nimport { Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}\r\n\r\nclass EmptyFavorites extends Component {\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <Typography variant='caption' classes={{ root: classes.root }}>\r\n        There are no items in the favorites list\r\n      </Typography>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(EmptyFavorites)\r\n","import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\nimport { Typography } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Favorite from './Favorite'\r\nimport EmptyFavorites from './EmptyFavorites'\r\n\r\nconst styles = {\r\n  container: {\r\n    paddingTop: '2%',\r\n    width: '35%',\r\n    '@media (max-width:1000px)': {\r\n      width: '100%',\r\n    },\r\n  },\r\n  header: {\r\n    textAlign: 'center',\r\n  },\r\n  favorites: {\r\n    marginTop: '5%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n}\r\n\r\n@inject('imagesStore')\r\n@observer\r\nclass Favorites extends Component {\r\n  removeFavorite = favoriteId => {\r\n    this.props.imagesStore.removeFavorite(favoriteId)\r\n  }\r\n\r\n  editFavorite = (favoriteId, description) => {\r\n    this.props.imagesStore.editFavorite(favoriteId, description)\r\n  }\r\n\r\n  render() {\r\n    const { classes, imagesStore } = this.props\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <Typography color='secondary' className={classes.header} variant='h6'>\r\n          Favorites list\r\n        </Typography>\r\n        \r\n        <div className={classes.favorites}>\r\n          {imagesStore.favoritesLength <= 0 ? (\r\n            <EmptyFavorites />\r\n          ) : (\r\n            imagesStore.favoritesToArray.map(favorite => (\r\n              <Favorite\r\n                key={favorite.id}\r\n                favorite={favorite}\r\n                removeFavorite={this.removeFavorite}\r\n                editFavorite={this.editFavorite}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Favorites)\r\n","import React, { Component } from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport Navbar from './components/Navbar'\nimport SearchInput from './components/SearchInput'\nimport Images from './components/Images/Images'\nimport Favorites from './components/Favorites/Favorites'\nimport { withStyles } from '@material-ui/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2C6DAA',\n    },\n    secondary: {\n      main: '#CF5261',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: '\"Open Sans\", sans-serif',\n  },\n})\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    '@media (max-width:1000px)': {\n      flexDirection: 'column-reverse',\n    },\n  },\n  search: {\n    width: '65%',\n    '@media (max-width:1000px)': {\n      width: '100%',\n    },\n  },\n}\n\n@inject('imagesStore')\n@observer\nclass App extends Component {\n  loadImages = async searchInput => {\n    await this.props.imagesStore.loadImages(searchInput)\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Navbar />\n        <div className={classes.container}>\n          <div className={classes.search}>\n            <SearchInput loadImages={this.loadImages} />\n            <Images />\n          </div>\n          <Favorites />\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'mobx-react'\n\nimport { ImagesStore } from './stores/ImagesStore'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst imagesStore = new ImagesStore()\nconst stores = { imagesStore }\n\nReactDOM.render(\n  <Provider {...stores}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}